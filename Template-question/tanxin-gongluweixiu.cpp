//与USACO Barn Repair一题策略相同
#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
const int N=15e3+5;
int a[N],b[N];//b数组用于计算a数组中相邻两个元素之间点坐标的个数
bool cmp(int A,int B){
    return A > B;
}
int main(){
    int n,m;
    cin>>n>>m;
    for (int i=1;i<=n;i++) cin>>a[i];
    for (int i=1;i<n;i++){
        b[i]=a[i+1]-a[i]-1;//易错，想不清楚可画图
    }
    //画一个线段图
    //l_l_l_l_l_l
    //1 2 3 4 5 6
    //假设2号点和6号点是图中的坑
    //那么这两个点之间点坐标的个数为3
    //列式为：6-2-1=3
    //由此可知b[i]=a[i+1]-a[i]-1;
    int ans=a[n]-a[1]+1;
    sort(b+1,b+n+1,cmp);
    for (int i=1;i<=m-1;i++){
        ans-=b[i];
    }
    cout<<ans<<endl;
    return 0;
}

/*
# 公路维修问题

## 题目描述

由于长期没有得到维修，A国的高速公路上出现了 $n$ 个坑。为了尽快填补好这 $n$ 个坑，A国决定对 $m$ 处地段采取交通管制。为了求解方便，假设A国的高速公路只有一条，而且是笔直的。现在给出 $n$ 个坑的位置，请你计算，最少要对多远的路段实施交通管制？

## 输入格式

输入数据共两行，第一行为两个正整数 $n, m(2\le m \le n\le 15000)$。第二行给出了 $n$ 个坑的坐标（坐标值均在长整范围内，按从小到大的顺序给出，且不会有两个点坐标相同）。

## 输出格式

仅一行，为最小长度和。

## 样例 #1

### 样例输入 #1

```
18 4
3 4 6 8 14 15 16 17 21 25 26 27 30 31 40 41 42 43
```

### 样例输出 #1

```
25
```

## 提示

[样例说明]


交通管制的地段分别为：$3-8,14-21,25-31,40-43$。
*/